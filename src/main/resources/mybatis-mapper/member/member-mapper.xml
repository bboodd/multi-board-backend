<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.multiboardbackend.domain.member.repository.MemberRepository">
    <!-- 공통 컬럼 -->
    <sql id="membersColumns">
        m.member_id as id,
        m.role_id,
        m.login_id,
        m.password,
        m.nickname,
        m.is_deleted as deleted,
        m.last_login_at
    </sql>

    <!-- 회원 등록 -->
    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO members (
            login_id,
            role_id,
            password,
            nickname
        ) VALUES (
            #{loginId},
            1,
            #{password},
            #{nickname}
        )
    </insert>

    <!-- 회원 ID로 조회 -->
    <select id="findById" resultType="com.spring.multiboardbackend.domain.member.vo.MemberVO">
        SELECT
            <include refid="membersColumns"/>
        FROM
            members m
        WHERE
            member_id = #{id}
    </select>

    <!-- 로그인 ID로 회원 조회 -->
    <select id="findByLoginId" resultType="com.spring.multiboardbackend.domain.member.vo.MemberVO">
        SELECT
            <include refid="membersColumns"/>
        FROM
            members m
        WHERE
            login_id = #{loginId}
            AND is_deleted = false
    </select>

    <!-- 로그인 ID 중복 확인 -->
    <select id="existsByLoginId" resultType="boolean">
        SELECT
            EXISTS (
                SELECT 1
                FROM members m
                WHERE
                    login_id = #{loginId}
                    AND is_deleted = false
            )
    </select>

    <!-- 닉네임 중복 확인 -->
    <select id="existsByNickname" resultType="boolean">
        SELECT
            EXISTS (
                SELECT 1
                FROM members m
                WHERE
                    nickname = #{nickname}
                    AND is_deleted = false
            )
    </select>

    <!-- 마지막 로그인 시간 업데이트 -->
    <update id="updateLastLoginAt">
        UPDATE members
        SET
            last_login_at = NOW()
        WHERE
            member_id = #{id}
    </update>

    <!-- 회원 권한 확인 -->
    <select id="hasRole" resultType="boolean">
        SELECT
            EXISTS (
                SELECT 1
                FROM members m
                JOIN roles r ON m.role_id = r.role_id
                WHERE
                    m.member_id = #{memberId}
                    AND r.name = #{roleName}
                    AND m.is_deleted = false
            )
    </select>
</mapper>